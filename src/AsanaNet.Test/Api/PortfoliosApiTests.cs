/*
 * Asana
 *
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using AsanaNet.Client;
using AsanaNet.Api;
// uncomment below to import models
//using AsanaNet.Model;

namespace AsanaNet.Test.Api
{
    /// <summary>
    ///  Class for testing PortfoliosApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PortfoliosApiTests : IDisposable
    {
        private PortfoliosApi instance;

        public PortfoliosApiTests()
        {
            instance = new PortfoliosApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PortfoliosApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' PortfoliosApi
            //Assert.IsType<PortfoliosApi>(instance);
        }

        /// <summary>
        /// Test AddCustomFieldSettingForPortfolio
        /// </summary>
        [Fact]
        public void AddCustomFieldSettingForPortfolioTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string portfolioGid = null;
            //AddCustomFieldSettingForPortfolioRequest addCustomFieldSettingForPortfolioRequest = null;
            //bool? optPretty = null;
            //var response = instance.AddCustomFieldSettingForPortfolio(portfolioGid, addCustomFieldSettingForPortfolioRequest, optPretty);
            //Assert.IsType<AddCustomFieldSettingForPortfolio200Response>(response);
        }

        /// <summary>
        /// Test AddItemForPortfolio
        /// </summary>
        [Fact]
        public void AddItemForPortfolioTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string portfolioGid = null;
            //AddItemForPortfolioRequest addItemForPortfolioRequest = null;
            //bool? optPretty = null;
            //var response = instance.AddItemForPortfolio(portfolioGid, addItemForPortfolioRequest, optPretty);
            //Assert.IsType<DeleteAttachment200Response>(response);
        }

        /// <summary>
        /// Test AddMembersForPortfolio
        /// </summary>
        [Fact]
        public void AddMembersForPortfolioTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string portfolioGid = null;
            //AddMembersForPortfolioRequest addMembersForPortfolioRequest = null;
            //bool? optPretty = null;
            //List<string>? optFields = null;
            //var response = instance.AddMembersForPortfolio(portfolioGid, addMembersForPortfolioRequest, optPretty, optFields);
            //Assert.IsType<CreatePortfolio201Response>(response);
        }

        /// <summary>
        /// Test CreatePortfolio
        /// </summary>
        [Fact]
        public void CreatePortfolioTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreatePortfolioRequest createPortfolioRequest = null;
            //bool? optPretty = null;
            //List<string>? optFields = null;
            //var response = instance.CreatePortfolio(createPortfolioRequest, optPretty, optFields);
            //Assert.IsType<CreatePortfolio201Response>(response);
        }

        /// <summary>
        /// Test DeletePortfolio
        /// </summary>
        [Fact]
        public void DeletePortfolioTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string portfolioGid = null;
            //bool? optPretty = null;
            //var response = instance.DeletePortfolio(portfolioGid, optPretty);
            //Assert.IsType<DeleteAttachment200Response>(response);
        }

        /// <summary>
        /// Test GetItemsForPortfolio
        /// </summary>
        [Fact]
        public void GetItemsForPortfolioTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string portfolioGid = null;
            //bool? optPretty = null;
            //int? limit = null;
            //string? offset = null;
            //List<string>? optFields = null;
            //var response = instance.GetItemsForPortfolio(portfolioGid, optPretty, limit, offset, optFields);
            //Assert.IsType<GetItemsForPortfolio200Response>(response);
        }

        /// <summary>
        /// Test GetPortfolio
        /// </summary>
        [Fact]
        public void GetPortfolioTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string portfolioGid = null;
            //bool? optPretty = null;
            //List<string>? optFields = null;
            //var response = instance.GetPortfolio(portfolioGid, optPretty, optFields);
            //Assert.IsType<CreatePortfolio201Response>(response);
        }

        /// <summary>
        /// Test GetPortfolios
        /// </summary>
        [Fact]
        public void GetPortfoliosTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string workspace = null;
            //bool? optPretty = null;
            //int? limit = null;
            //string? offset = null;
            //string? owner = null;
            //List<string>? optFields = null;
            //var response = instance.GetPortfolios(workspace, optPretty, limit, offset, owner, optFields);
            //Assert.IsType<GetPortfolios200Response>(response);
        }

        /// <summary>
        /// Test RemoveCustomFieldSettingForPortfolio
        /// </summary>
        [Fact]
        public void RemoveCustomFieldSettingForPortfolioTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string portfolioGid = null;
            //RemoveCustomFieldSettingForPortfolioRequest removeCustomFieldSettingForPortfolioRequest = null;
            //bool? optPretty = null;
            //var response = instance.RemoveCustomFieldSettingForPortfolio(portfolioGid, removeCustomFieldSettingForPortfolioRequest, optPretty);
            //Assert.IsType<DeleteAttachment200Response>(response);
        }

        /// <summary>
        /// Test RemoveItemForPortfolio
        /// </summary>
        [Fact]
        public void RemoveItemForPortfolioTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string portfolioGid = null;
            //RemoveItemForPortfolioRequest removeItemForPortfolioRequest = null;
            //bool? optPretty = null;
            //var response = instance.RemoveItemForPortfolio(portfolioGid, removeItemForPortfolioRequest, optPretty);
            //Assert.IsType<DeleteAttachment200Response>(response);
        }

        /// <summary>
        /// Test RemoveMembersForPortfolio
        /// </summary>
        [Fact]
        public void RemoveMembersForPortfolioTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string portfolioGid = null;
            //RemoveMembersForPortfolioRequest removeMembersForPortfolioRequest = null;
            //bool? optPretty = null;
            //List<string>? optFields = null;
            //var response = instance.RemoveMembersForPortfolio(portfolioGid, removeMembersForPortfolioRequest, optPretty, optFields);
            //Assert.IsType<CreatePortfolio201Response>(response);
        }

        /// <summary>
        /// Test UpdatePortfolio
        /// </summary>
        [Fact]
        public void UpdatePortfolioTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string portfolioGid = null;
            //CreatePortfolioRequest createPortfolioRequest = null;
            //bool? optPretty = null;
            //List<string>? optFields = null;
            //var response = instance.UpdatePortfolio(portfolioGid, createPortfolioRequest, optPretty, optFields);
            //Assert.IsType<CreatePortfolio201Response>(response);
        }
    }
}
