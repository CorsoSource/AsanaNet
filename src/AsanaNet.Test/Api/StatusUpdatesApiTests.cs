/*
 * Asana
 *
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using AsanaNet.Client;
using AsanaNet.Api;
// uncomment below to import models
//using AsanaNet.Model;

namespace AsanaNet.Test.Api
{
    /// <summary>
    ///  Class for testing StatusUpdatesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class StatusUpdatesApiTests : IDisposable
    {
        private StatusUpdatesApi instance;

        public StatusUpdatesApiTests()
        {
            instance = new StatusUpdatesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of StatusUpdatesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' StatusUpdatesApi
            //Assert.IsType<StatusUpdatesApi>(instance);
        }

        /// <summary>
        /// Test CreateStatusForObject
        /// </summary>
        [Fact]
        public void CreateStatusForObjectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateStatusForObjectRequest createStatusForObjectRequest = null;
            //bool? optPretty = null;
            //int? limit = null;
            //string? offset = null;
            //List<string>? optFields = null;
            //var response = instance.CreateStatusForObject(createStatusForObjectRequest, optPretty, limit, offset, optFields);
            //Assert.IsType<GetStatus200Response>(response);
        }

        /// <summary>
        /// Test DeleteStatus
        /// </summary>
        [Fact]
        public void DeleteStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string statusUpdateGid = null;
            //bool? optPretty = null;
            //var response = instance.DeleteStatus(statusUpdateGid, optPretty);
            //Assert.IsType<DeleteAttachment200Response>(response);
        }

        /// <summary>
        /// Test GetStatus
        /// </summary>
        [Fact]
        public void GetStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string statusUpdateGid = null;
            //bool? optPretty = null;
            //List<string>? optFields = null;
            //var response = instance.GetStatus(statusUpdateGid, optPretty, optFields);
            //Assert.IsType<GetStatus200Response>(response);
        }

        /// <summary>
        /// Test GetStatusesForObject
        /// </summary>
        [Fact]
        public void GetStatusesForObjectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string parent = null;
            //bool? optPretty = null;
            //int? limit = null;
            //string? offset = null;
            //DateTime? createdSince = null;
            //List<string>? optFields = null;
            //var response = instance.GetStatusesForObject(parent, optPretty, limit, offset, createdSince, optFields);
            //Assert.IsType<GetStatusesForObject200Response>(response);
        }
    }
}
