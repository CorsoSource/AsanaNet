/*
 * Asana
 *
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using AsanaNet.Client;
using AsanaNet.Api;
// uncomment below to import models
//using AsanaNet.Model;

namespace AsanaNet.Test.Api
{
    /// <summary>
    ///  Class for testing UserTaskListsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class UserTaskListsApiTests : IDisposable
    {
        private UserTaskListsApi instance;

        public UserTaskListsApiTests()
        {
            instance = new UserTaskListsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of UserTaskListsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' UserTaskListsApi
            //Assert.IsType<UserTaskListsApi>(instance);
        }

        /// <summary>
        /// Test GetUserTaskList
        /// </summary>
        [Fact]
        public void GetUserTaskListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userTaskListGid = null;
            //bool? optPretty = null;
            //List<string>? optFields = null;
            //var response = instance.GetUserTaskList(userTaskListGid, optPretty, optFields);
            //Assert.IsType<GetUserTaskList200Response>(response);
        }

        /// <summary>
        /// Test GetUserTaskListForUser
        /// </summary>
        [Fact]
        public void GetUserTaskListForUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userGid = null;
            //string workspace = null;
            //bool? optPretty = null;
            //List<string>? optFields = null;
            //var response = instance.GetUserTaskListForUser(userGid, workspace, optPretty, optFields);
            //Assert.IsType<GetUserTaskList200Response>(response);
        }
    }
}
