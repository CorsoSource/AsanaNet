/*
 * Asana
 *
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using AsanaNet.Model;
using AsanaNet.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace AsanaNet.Test.Model
{
    /// <summary>
    ///  Class for testing CustomFieldBase
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CustomFieldBaseTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for CustomFieldBase
        //private CustomFieldBase instance;

        public CustomFieldBaseTests()
        {
            // TODO uncomment below to create an instance of CustomFieldBase
            //instance = new CustomFieldBase();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CustomFieldBase
        /// </summary>
        [Fact]
        public void CustomFieldBaseInstanceTest()
        {
            // TODO uncomment below to test "IsType" CustomFieldBase
            //Assert.IsType<CustomFieldBase>(instance);
        }

        /// <summary>
        /// Test the property 'Gid'
        /// </summary>
        [Fact]
        public void GidTest()
        {
            // TODO unit test for the property 'Gid'
        }

        /// <summary>
        /// Test the property 'ResourceType'
        /// </summary>
        [Fact]
        public void ResourceTypeTest()
        {
            // TODO unit test for the property 'ResourceType'
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'ResourceSubtype'
        /// </summary>
        [Fact]
        public void ResourceSubtypeTest()
        {
            // TODO unit test for the property 'ResourceSubtype'
        }

        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }

        /// <summary>
        /// Test the property 'EnumOptions'
        /// </summary>
        [Fact]
        public void EnumOptionsTest()
        {
            // TODO unit test for the property 'EnumOptions'
        }

        /// <summary>
        /// Test the property 'Enabled'
        /// </summary>
        [Fact]
        public void EnabledTest()
        {
            // TODO unit test for the property 'Enabled'
        }

        /// <summary>
        /// Test the property 'RepresentationType'
        /// </summary>
        [Fact]
        public void RepresentationTypeTest()
        {
            // TODO unit test for the property 'RepresentationType'
        }

        /// <summary>
        /// Test the property 'IdPrefix'
        /// </summary>
        [Fact]
        public void IdPrefixTest()
        {
            // TODO unit test for the property 'IdPrefix'
        }

        /// <summary>
        /// Test the property 'IsFormulaField'
        /// </summary>
        [Fact]
        public void IsFormulaFieldTest()
        {
            // TODO unit test for the property 'IsFormulaField'
        }

        /// <summary>
        /// Test the property 'DateValue'
        /// </summary>
        [Fact]
        public void DateValueTest()
        {
            // TODO unit test for the property 'DateValue'
        }

        /// <summary>
        /// Test the property 'EnumValue'
        /// </summary>
        [Fact]
        public void EnumValueTest()
        {
            // TODO unit test for the property 'EnumValue'
        }

        /// <summary>
        /// Test the property 'MultiEnumValues'
        /// </summary>
        [Fact]
        public void MultiEnumValuesTest()
        {
            // TODO unit test for the property 'MultiEnumValues'
        }

        /// <summary>
        /// Test the property 'NumberValue'
        /// </summary>
        [Fact]
        public void NumberValueTest()
        {
            // TODO unit test for the property 'NumberValue'
        }

        /// <summary>
        /// Test the property 'TextValue'
        /// </summary>
        [Fact]
        public void TextValueTest()
        {
            // TODO unit test for the property 'TextValue'
        }

        /// <summary>
        /// Test the property 'DisplayValue'
        /// </summary>
        [Fact]
        public void DisplayValueTest()
        {
            // TODO unit test for the property 'DisplayValue'
        }

        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }

        /// <summary>
        /// Test the property 'Precision'
        /// </summary>
        [Fact]
        public void PrecisionTest()
        {
            // TODO unit test for the property 'Precision'
        }

        /// <summary>
        /// Test the property 'Format'
        /// </summary>
        [Fact]
        public void FormatTest()
        {
            // TODO unit test for the property 'Format'
        }

        /// <summary>
        /// Test the property 'CurrencyCode'
        /// </summary>
        [Fact]
        public void CurrencyCodeTest()
        {
            // TODO unit test for the property 'CurrencyCode'
        }

        /// <summary>
        /// Test the property 'CustomLabel'
        /// </summary>
        [Fact]
        public void CustomLabelTest()
        {
            // TODO unit test for the property 'CustomLabel'
        }

        /// <summary>
        /// Test the property 'CustomLabelPosition'
        /// </summary>
        [Fact]
        public void CustomLabelPositionTest()
        {
            // TODO unit test for the property 'CustomLabelPosition'
        }

        /// <summary>
        /// Test the property 'IsGlobalToWorkspace'
        /// </summary>
        [Fact]
        public void IsGlobalToWorkspaceTest()
        {
            // TODO unit test for the property 'IsGlobalToWorkspace'
        }

        /// <summary>
        /// Test the property 'HasNotificationsEnabled'
        /// </summary>
        [Fact]
        public void HasNotificationsEnabledTest()
        {
            // TODO unit test for the property 'HasNotificationsEnabled'
        }

        /// <summary>
        /// Test the property 'AsanaCreatedField'
        /// </summary>
        [Fact]
        public void AsanaCreatedFieldTest()
        {
            // TODO unit test for the property 'AsanaCreatedField'
        }
    }
}
