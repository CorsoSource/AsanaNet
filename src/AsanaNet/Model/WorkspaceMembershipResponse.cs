/*
 * Asana
 *
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AsanaNet.Client.OpenAPIDateConverter;

namespace AsanaNet.Model
{
    /// <summary>
    /// WorkspaceMembershipResponse
    /// </summary>
    [DataContract(Name = "WorkspaceMembershipResponse")]
    public partial class WorkspaceMembershipResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WorkspaceMembershipResponse" /> class.
        /// </summary>
        /// <param name="user">user.</param>
        /// <param name="workspace">workspace.</param>
        /// <param name="userTaskList">userTaskList.</param>
        /// <param name="vacationDates">vacationDates.</param>
        public WorkspaceMembershipResponse(UserCompact user = default(UserCompact), WorkspaceCompact workspace = default(WorkspaceCompact), UserTaskListCompact userTaskList = default(UserTaskListCompact), WorkspaceMembershipResponseAllOfVacationDates vacationDates = default(WorkspaceMembershipResponseAllOfVacationDates))
        {
            this.User = user;
            this.Workspace = workspace;
            this.UserTaskList = userTaskList;
            this.VacationDates = vacationDates;
        }

        /// <summary>
        /// Globally unique identifier of the resource, as a string.
        /// </summary>
        /// <value>Globally unique identifier of the resource, as a string.</value>
        /// <example>12345</example>
        [DataMember(Name = "gid", EmitDefaultValue = false)]
        public string Gid { get; private set; }

        /// <summary>
        /// Returns false as Gid should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeGid()
        {
            return false;
        }
        /// <summary>
        /// The base type of this resource.
        /// </summary>
        /// <value>The base type of this resource.</value>
        /// <example>task</example>
        [DataMember(Name = "resource_type", EmitDefaultValue = false)]
        public string ResourceType { get; private set; }

        /// <summary>
        /// Returns false as ResourceType should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeResourceType()
        {
            return false;
        }
        /// <summary>
        /// Gets or Sets User
        /// </summary>
        [DataMember(Name = "user", EmitDefaultValue = false)]
        public UserCompact User { get; set; }

        /// <summary>
        /// Gets or Sets Workspace
        /// </summary>
        [DataMember(Name = "workspace", EmitDefaultValue = false)]
        public WorkspaceCompact Workspace { get; set; }

        /// <summary>
        /// Gets or Sets UserTaskList
        /// </summary>
        [DataMember(Name = "user_task_list", EmitDefaultValue = false)]
        public UserTaskListCompact UserTaskList { get; set; }

        /// <summary>
        /// Reflects if this user still a member of the workspace.
        /// </summary>
        /// <value>Reflects if this user still a member of the workspace.</value>
        [DataMember(Name = "is_active", EmitDefaultValue = true)]
        public bool IsActive { get; private set; }

        /// <summary>
        /// Returns false as IsActive should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeIsActive()
        {
            return false;
        }
        /// <summary>
        /// Reflects if this user is an admin of the workspace.
        /// </summary>
        /// <value>Reflects if this user is an admin of the workspace.</value>
        [DataMember(Name = "is_admin", EmitDefaultValue = true)]
        public bool IsAdmin { get; private set; }

        /// <summary>
        /// Returns false as IsAdmin should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeIsAdmin()
        {
            return false;
        }
        /// <summary>
        /// Reflects if this user is a guest of the workspace.
        /// </summary>
        /// <value>Reflects if this user is a guest of the workspace.</value>
        [DataMember(Name = "is_guest", EmitDefaultValue = true)]
        public bool IsGuest { get; private set; }

        /// <summary>
        /// Returns false as IsGuest should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeIsGuest()
        {
            return false;
        }
        /// <summary>
        /// Gets or Sets VacationDates
        /// </summary>
        [DataMember(Name = "vacation_dates", EmitDefaultValue = true)]
        public WorkspaceMembershipResponseAllOfVacationDates VacationDates { get; set; }

        /// <summary>
        /// The time at which this resource was created.
        /// </summary>
        /// <value>The time at which this resource was created.</value>
        /// <example>2012-02-22T02:06:58.147Z</example>
        [DataMember(Name = "created_at", EmitDefaultValue = false)]
        public DateTime CreatedAt { get; private set; }

        /// <summary>
        /// Returns false as CreatedAt should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCreatedAt()
        {
            return false;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class WorkspaceMembershipResponse {\n");
            sb.Append("  Gid: ").Append(Gid).Append("\n");
            sb.Append("  ResourceType: ").Append(ResourceType).Append("\n");
            sb.Append("  User: ").Append(User).Append("\n");
            sb.Append("  Workspace: ").Append(Workspace).Append("\n");
            sb.Append("  UserTaskList: ").Append(UserTaskList).Append("\n");
            sb.Append("  IsActive: ").Append(IsActive).Append("\n");
            sb.Append("  IsAdmin: ").Append(IsAdmin).Append("\n");
            sb.Append("  IsGuest: ").Append(IsGuest).Append("\n");
            sb.Append("  VacationDates: ").Append(VacationDates).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
