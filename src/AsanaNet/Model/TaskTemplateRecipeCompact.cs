/*
 * Asana
 *
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AsanaNet.Client.OpenAPIDateConverter;

namespace AsanaNet.Model
{
    /// <summary>
    /// TaskTemplateRecipeCompact
    /// </summary>
    [DataContract(Name = "TaskTemplateRecipeCompact")]
    public partial class TaskTemplateRecipeCompact : IValidatableObject
    {
        /// <summary>
        /// The subtype of the task that will be created from this template.
        /// </summary>
        /// <value>The subtype of the task that will be created from this template.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum TaskResourceSubtypeEnum
        {
            /// <summary>
            /// Enum DefaultTask for value: default_task
            /// </summary>
            [EnumMember(Value = "default_task")]
            DefaultTask = 1,

            /// <summary>
            /// Enum MilestoneTask for value: milestone_task
            /// </summary>
            [EnumMember(Value = "milestone_task")]
            MilestoneTask = 2,

            /// <summary>
            /// Enum ApprovalTask for value: approval_task
            /// </summary>
            [EnumMember(Value = "approval_task")]
            ApprovalTask = 3
        }


        /// <summary>
        /// The subtype of the task that will be created from this template.
        /// </summary>
        /// <value>The subtype of the task that will be created from this template.</value>
        /// <example>default_task</example>
        [DataMember(Name = "task_resource_subtype", EmitDefaultValue = false)]
        public TaskResourceSubtypeEnum? TaskResourceSubtype { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="TaskTemplateRecipeCompact" /> class.
        /// </summary>
        /// <param name="name">Name of the task that will be created from this template..</param>
        /// <param name="taskResourceSubtype">The subtype of the task that will be created from this template..</param>
        public TaskTemplateRecipeCompact(string name = default(string), TaskResourceSubtypeEnum? taskResourceSubtype = default(TaskResourceSubtypeEnum?))
        {
            this.Name = name;
            this.TaskResourceSubtype = taskResourceSubtype;
        }

        /// <summary>
        /// Name of the task that will be created from this template.
        /// </summary>
        /// <value>Name of the task that will be created from this template.</value>
        /// <example>Bug Report</example>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TaskTemplateRecipeCompact {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  TaskResourceSubtype: ").Append(TaskResourceSubtype).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
