/*
 * Asana
 *
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = AsanaNet.Client.OpenAPIDateConverter;

namespace AsanaNet.Model
{
    /// <summary>
    /// [Opt In](/docs/inputoutput-options). A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.
    /// </summary>
    [DataContract(Name = "TaskCompact_allOf_created_by")]
    public partial class TaskCompactAllOfCreatedBy : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TaskCompactAllOfCreatedBy" /> class.
        /// </summary>
        /// <param name="gid">Globally unique identifier of the resource..</param>
        /// <param name="resourceType">The type of resource..</param>
        public TaskCompactAllOfCreatedBy(string gid = default(string), string resourceType = default(string))
        {
            this.Gid = gid;
            this.ResourceType = resourceType;
        }

        /// <summary>
        /// Globally unique identifier of the resource.
        /// </summary>
        /// <value>Globally unique identifier of the resource.</value>
        /// <example>1111</example>
        [DataMember(Name = "gid", EmitDefaultValue = false)]
        public string Gid { get; set; }

        /// <summary>
        /// The type of resource.
        /// </summary>
        /// <value>The type of resource.</value>
        /// <example>user</example>
        [DataMember(Name = "resource_type", EmitDefaultValue = false)]
        public string ResourceType { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TaskCompactAllOfCreatedBy {\n");
            sb.Append("  Gid: ").Append(Gid).Append("\n");
            sb.Append("  ResourceType: ").Append(ResourceType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
